/*:
 [–°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ](Table%20of%20contents) ‚Ä¢ [–ü—Ä–µ–¥—ã–¥—É—â–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞](@previous) ‚Ä¢ [–°–ª–µ–¥—É—é—â–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞](@next)
### String –æ–ø—è—Ç—å —Å—Ç–∞–ª–∞ `Collection`

[SE-0163][SE-0163] - —ç—Ç–æ –ø–µ—Ä–≤–∞—è —á–∞—Å—Ç—å –ø–µ—Ä–µ—Å–º–æ—Ç—Ä–µ–Ω–Ω–æ–π –ú–æ–¥–µ–ª–∏ —Å—Ç—Ä–æ–∫–∏ `String` –≤ Swift 4. –°—É—â–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è—Ç –≤ —Ç–æ–º, —á—Ç–æ `String` —Ç–µ–ø–µ—Ä—å –æ–ø—è—Ç—å —Å—Ç–∞–ª–∞ –∫–æ–ª–ª–µ–∫—Ü–∏–µ–π `Collection` (–∫–∞–∫ —ç—Ç–æ –±—ã–ª–æ –≤ Swift 1.x), —Ç–æ –µ—Å—Ç—å —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å `String.CharacterView` –≤–∫–ª—é—á–µ–Ω–∞ –≤ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–π —Ç–∏–ø. (–î—Ä—É–≥–∏–µ views, `UnicodeScalarView`, `UTF8View`, –∏ `UTF16View`, –≤—Å–µ –µ—â–µ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç –≤ `String`.)

[SE-0163]: https://github.com/apple/swift-evolution/blob/master/proposals/0163-string-revision-1.md "Swift Evolution Proposal SE-0163: String Revision: Collection Conformance, C Interop, Transcoding"
[SE-0180]: https://github.com/apple/swift-evolution/blob/master/proposals/0180-string-index-overhaul.md "Swift Evolution Proposal SE-0180: String Index Overhaul"
*/
import Foundation

var greeting = "–ü–∏–≤–µ—Ç,–ø—Ä–µ–∫—Ä–∞—Å–Ω—ã–π –ú–∏—Ä!!"
let rev = String(greeting.reversed())
greeting.isEmpty
greeting.count
greeting.dropFirst()
let filtered = greeting.filter { $0 != "!" }
filtered


/*:
 ### `Substring` - —ç—Ç–æ –Ω–æ–≤—ã–π —Ç–∏–ø –¥–ª—è —Å—Ç—Ä–æ–∫–æ–≤—ã—Ö —Å–ª–∞–π—Å–æ–≤
 
 String —Å–ª–∞–π—Å—ã —è–≤–ª—è—é—Ç—Å—è —ç–∫–∑–µ–º–ø–ª—è—Ä–∞–º–∏ —Ç–∏–ø–∞ `Substring`. –ö–∞–∫ `String`, —Ç–∞–∫ –∏ `Substring` "–ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞—é—Ç" –ø—Ä–æ—Ç–æ–∫–æ–ª `StringProtocol`. –ë–æ–ª—å—à–∞—è —á–∞—Å—Ç—å API –¥–ª—è —Å—Ç—Ä–æ–∫ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –ø—Ä–æ—Ç–æ–∫–æ–ª–µ `StringProtocol`, —Ç–∞–∫ —á—Ç–æ `String` –∏ `Substring` –≤–µ–¥—É—Ç —Å–µ–±—è –≤ –±–æ–ª—å—à–∏–Ω—Å—Ç–≤–µ —Å–ª—É—á–∞–µ–≤ –ø–æ—Ö–æ–∂–∏–º –æ–±—Ä–∞–∑–æ–º.
 */
greeting = "–ö–∞–∂–¥—ã–π –æ—Ö–æ—Ç–Ω–∏–∫ –∂–µ–ª–∞–µ—Ç –∑–Ω–∞—Ç—å, –≥–¥–µ —Å–∏–¥–∏—Ç —Ñ–∞–∑–∞–Ω."
let parts = greeting.split(separator: " ")
// parts - —ç—Ç–æ –º–∞—Å—Å–∏–≤ [Substring], –∞ –Ω–µ [String].
type(of: parts)

let comma = greeting.index(of: ",")!
let substring = greeting[..<comma]
type(of: substring)

let beginning = greeting.prefix(11)
type(of: beginning)

let beginningString = String(beginning)
type(of: beginningString)

greeting = "Hello, friend!!!"
if let i = greeting.index(where: { $0 >= "A" && $0 <= "Z" }) {
    greeting[i]
    type(of: greeting[i])
}


// –ë–æ–ª—å—à–∞—è —á–∞—Å—Ç—å String APIs –º–æ–∂–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —Å Substring
substring.uppercased()
/*:
–ü–æ–¥—Å—Ç—Ä–æ–∫–∞ `Substring` "–¥–µ—Ä–∂–∏—Ç" –ø–æ–ª–Ω—É—é —Å—Ç—Ä–æ–∫—É `String`, –∏–∑ –∫–æ—Ç–æ—Ä–æ–π –æ–Ω–∞ —Å–æ–∑–¥–∞–Ω–∞. –≠—Ç–æ –º–æ–∂–µ—Ç –ø—Ä–∏–≤–æ–¥–∏—Ç—å –∫ —Å–ª—É—á–∞–π–Ω–æ–º—É –æ—á–µ–Ω—å –±–æ–ª—å—à–æ–º—É —É–≤–µ–ª–∏—á–µ–Ω–∏—é –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è "–ø–∞–º—è—Ç–∏" –ø—Ä–∏ –ø–µ—Ä–µ–¥–∞—á–∏ –∫–∞–∑–∞–ª–æ—Å—å –±—ã –º–∞–ª–µ–Ω—å–∫–∏—Ö –ø–æ–¥—Å—Ç—Ä–æ–∫ `Substring`, –∫–æ—Ç–æ—Ä—ã–µ –¥–µ—Ä–∂–∞—Ç –±–æ–ª—å—à—É—é —Å—Ç—Ä–æ–∫—É `String`, –≤ –¥—Ä—É–≥–∏–µ API. –ü–æ —ç—Ç–æ–π –ø—Ä–∏—á–∏–Ω–µ –±–æ–ª—å—à–∏–Ω—Å—Ç–≤–æ —Ñ—É–Ω–∫—Ü–∏–π, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–ª—É—á–∞—é—Ç –≤ –∫–∞—á–µ—Å—Ç–≤–µ –∞—Ä–≥—É–º–µ–Ω—Ç–∞ —Å—Ç—Ä–æ–∫—É, –¥–æ–ª–∂–Ω—ã –ø—Ä–∏–Ω–∏–º–∞—Ç—å —Ç–æ–ª—å–∫–æ —Å—Ç—Ä–æ–∫—É, —Ç–æ –µ—Å—Ç—å —ç–∫–∑–µ–º–ø–ª—è—Ä `String`; –≤–∞–º –Ω–µ —Å–ª–µ–¥—É–µ—Ç –¥–µ–ª–∞—Ç—å —ç—Ç–∏ —Ñ—É–Ω–∫—Ü–∏–∏ generic –∏ –ø—Ä–∏–Ω–∏–º–∞—Ç—å –ª—é–±–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ, "–ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞—é—â–µ–µ" –ø—Ä–æ—Ç–æ–∫–æ–ª `StringProtocol`.

–î–ª—è –æ–±—Ä–∞—Ç–Ω–æ–≥–æ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è `Substring` –≤ `String`, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ç–æ—Ä  `String()`. –≠—Ç–æ –ø—Ä–∏–≤–µ–¥–µ—Ç –∫ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—é –ø–æ–¥—Å—Ç—Ä–æ–∫–∏ –≤ –Ω–æ–≤—ã–π –±—É—Ñ–µ—Ä:
*/
let newString = String(substring)
type(of: newString)

/*:
 Unicode 9: Swift 4 –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç Unicode 9, –æ–±–µ—Å–ø–µ—á–∏–≤–∞—è –ø—Ä–∞–≤–∏–ª—å–Ω—É—é —Ä–∞–±–æ—Ç—É —Å –∫–ª–∞—Å—Ç–µ—Ä–æ–º –≥—Ä–∞—Ñ–µ–º –¥–ª—è —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —ç–º–æ–¥–∑–∏, –∫–æ–≥–¥–∞ –Ω–µ—Å–∫–æ–ª—å–∫–æ –∫–æ–¥–æ–≤—ã—Ö –ø—É–Ω–∫—Ç–æ–≤ —Å–≥—Ä—É–ø–ø–∏—Ä–æ–≤–∞–Ω—ã –≤ –æ–¥–∏–Ω –∫–ª–∞—Å—Ç–µ—Ä, –∫–æ—Ç–æ—Ä—ã–π –¥–µ–π—Å—Ç–≤—É–µ—Ç –∫–∞–∫ –æ–¥–∏–Ω —Å–∏–º–≤–æ–ª.
 [Emoji 4.0]: https://oleb.net/blog/2016/12/emoji-4-0/
 */

// –ø–∞–ø–∞
var family = "üë®"
// –º–∞–º–∞
family += "\u{200D}üë©"
family.count

// –¥–æ–±–∞–≤–ª—è–µ–º –æ–¥–Ω—É –¥–æ—á–∫—É
family += "\u{200D}üëß"
// –¥–æ–±–∞–≤–ª—è–µ–º –æ–¥–Ω–æ–≥–æ —Å—ã–Ω–∞
family += "\u{200D}üë¶"
family.count // 1
family.contains("üëß") // true

let s = family.unicodeScalars.flatMap {
    $0 != "\u{200D}" ? String($0) :nil }

family.unicodeScalars.forEach {
    if $0 != "\u{200D}" {
        print("\($0) ")}
}

// –¥–ª—è –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ –∫–ª–∞—Å—Ç–æ—Ä–Ω—ã—Ö –≥—Ä–∞—Ñ–µ–º –ø—Ä–∏–º–µ–Ω—è–µ—Ç—Å—è
// —Ö–æ—Ä–æ—à–æ –∏–∑–≤–µ—Å—Ç–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è 'applyingTransform'
family.applyingTransform(.toUnicodeName, reverse: false)!
    .replacingOccurrences(of: "\\N", with: "")
    .components(separatedBy: CharacterSet(charactersIn: "{}"))
    .filter { $0 != "" }

// –í–æ –≤—Å–µ—Ö —Å–ª—É—á–∞—è—Ö, –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã—Ö –Ω–∏–∂–µ, –ø–æ–¥—Å—á–µ—Ç —Å–∏–º–≤–æ–ª–æ–≤ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—Å—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ (—á–µ–≥–æ –Ω–µ –±—ã–ª–æ –≤ Swift 3):

"üëßüèΩ".count // person + skin tone; –≤ Swift 3: 2
"üë®‚Äçüë©‚Äçüëß‚Äçüë¶".count // —Å–µ–º—å—è –∏—Ö 4-—Ö —á–µ–ª–æ–≤–µ–∫; –≤ Swift 3: 4
"üë±üèæ\u{200D}üë©üèΩ\u{200D}üëßüèø\u{200D}üë¶üèª".count // family + skin tones; –≤ Swift 3: 8
"üë©üèª‚Äçüöí".count // person + skin tone + profession; –≤ Swift 3: 3
"üá®üá∫üá¨üá´üá±üá®".count // –º–Ω–æ–∂–µ—Å—Ç–≤–æ —Ñ–ª–∞–≥–æ–≤; –≤ Swift 3: 1


/*:
 ### –ü–æ—è–≤–∏–ª–æ—Å—å —Å–≤–æ–π—Å—Ç–≤–æ `Character.unicodeScalars`
 
 –¢–µ–ø–µ—Ä—å —É –≤–∞—Å –µ—Å—Ç—å –ø—Ä—è–º–æ–π –¥–æ—Å—Ç—É–ø –∫ —Å–≤–æ–π—Å—Ç–≤—É unicodeScalars —É `Character`, –±–µ–∑ –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ–π –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ –≤ `String` ([SE-0178][SE-0178]):
 
 [SE-0178]: https://github.com/apple/swift-evolution/blob/master/proposals/0178-character-unicode-view.md "Swift Evolution Proposal SE-0178: Add `unicodeScalars` property to `Character`"
 */
let c: Character = "üá®üá∫"
Array(c.unicodeScalars)
/*:
### –ú–Ω–æ–≥–æ—Å—Ç—Ä–æ—á–Ω—ã–µ –ª–∏—Ç–µ—Ä–∞–ª—ã

[SE-0168][SE-0168] –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç –ø—Ä–æ—Å—Ç–µ–π—à–∏–π —Å–∏–Ω—Ç–∞–∫—Å–∏—Å –¥–ª—è –º–æ–≥–æ—Å—Ç—Ä–æ—á–Ω—ã—Ö —Å—Ç—Ä–æ–∫–æ–≤—ã—Ö –ª–∏—Ç–µ—Ä–∞–ª–æ–≤, –∏—Å–ø–æ–ª—å–∑—É—è —Ç—Ä–∏ –¥–≤–æ–π–Ω—ã–∫ –∫–∞–≤—ã—á–∫–∏ (`"""`). –í–Ω—É—Ç—Ä–∏ –º–Ω–æ–≥–æ—Å—Ç—Ä–æ—á–Ω–æ–≥–æ –ª–∏—Ç–µ—Ä–∞–ª–∞ –Ω–µ –Ω—É–∂–Ω–æ —ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞—Ç—å –æ–¥–∏–Ω–∞—Ä–Ω—ã–µ –∫–∞–≤—ã—á–∫–∏, —á—Ç–æ –æ–∑–Ω–∞—á–∞–µ—Ç, —á—Ç–æ —Ç–∞–∫–∏–µ —Ñ–æ—Ä–º–∞—Ç—ã, –∫–∞–∫ JSON –∏ HTML, –º–æ–≥—É—Ç –±—ã—Ç—å –≤—Å—Ç–∞–≤–ª–µ–Ω—ã –≤ –Ω–∏—Ö –±–µ–∑–æ –≤—Å—è–∫–æ–≥–æ —ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è. –û—Ç—Å—Ç—É–ø –∑–∞–∫—Ä—ã–≤–∞—é—â–µ–≥–æ –ª–∏—Ç–µ—Ä–∞–ª–∞ `"""` –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç, —Å–∫–æ–ª—å–∫–æ –ø—Ä–æ–±–µ–ª–æ–≤ –±—É–¥–µ—Ç —É–¥–∞–ª–µ–Ω–æ —Å –Ω–∞—á–∞–ª–∞ –∫–∞–∂–¥–æ–π —Å—Ç—Ä–æ–∫–∏.

[SE-0168]: https://github.com/apple/swift-evolution/blob/master/proposals/0168-multi-line-string-literals.md "Swift Evolution Proposal SE-0168: Multi-Line String Literals"
*/
let messageSwift3 = "–ï—Å—Ç—å —Å–≤–æ–π—Å—Ç–≤–∞, –±–µ—Å—Ç–µ–ª–µ—Å–Ω—ã–µ —è–≤–ª–µ–Ω—å—è,\n–° –¥–≤–æ–π–Ω–æ—é –∂–∏–∑–Ω—å—é; —Ç–∏–ø –∏—Ö —Å –¥–∞–≤–Ω–∏—Ö –ª–µ—Ç, ‚Äî \n–¢–∞ –¥–≤–æ–π—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å, —á—Ç–æ –ø–æ—Ä–∞–∂–∞–µ—Ç –∑—Ä–µ–Ω—å–µ: \n–¢–æ ‚Äî —Ç–µ–Ω—å –∏ —Å—É—â–Ω–æ—Å—Ç—å, –≤–µ—â–µ—Å—Ç–≤–æ –∏ —Å–≤–µ—Ç.\n\n–ï—Å—Ç—å –¥–≤–∞ –º–æ–ª—á–∞–Ω—å—è, –±–µ—Ä–µ–≥–∞ÃÅ –∏ –º–æ—Ä–µ,\n–î—É—à–∞ –∏ —Ç–µ–ª–æ. –í–ª–∞—Å—Ç–≤—É–µ—Ç –æ–¥–Ω–æ\n–í —Ç–∏—à–∏. –°–ø–æ–∫–æ–π–Ω–æ –Ω–µ–∂–Ω–æ–µ, –æ–Ω–æ\n–í–æ—Å–ø–æ–º–∏–Ω–∞–Ω–∏–π –∏ –ø–æ–∑–Ω–∞–Ω—å—è –≥–æ—Ä–µ\n\n–¢–∞–∏—Ç –≤ —Å–µ–±–µ, –∏ ¬´–±–æ–ª—å—à–µ –Ω–∏–∫–æ–≥–¥–∞¬ª\n–ó–æ–≤—É—Ç –µ–≥–æ. –¢–µ–ª–µ—Å–Ω–æ–µ –º–æ–ª—á–∞–Ω—å–µ,\n–û–Ω–æ –±–µ—Å—Å–∏–ª—å–Ω–æ, –Ω–µ —Å—Ç—Ä–∞—à–∏—Å—å –≤—Ä–µ–¥–∞!\n\n"
print (messageSwift3)

let multilineString = """
        –ï—Å—Ç—å —Å–≤–æ–π—Å—Ç–≤–∞, –±–µ—Å—Ç–µ–ª–µ—Å–Ω—ã–µ —è–≤–ª–µ–Ω—å—è,
        –° –¥–≤–æ–π–Ω–æ—é –∂–∏–∑–Ω—å—é; —Ç–∏–ø –∏—Ö —Å –¥–∞–≤–Ω–∏—Ö –ª–µ—Ç, ‚Äî
        –¢–∞ –¥–≤–æ–π—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å, —á—Ç–æ –ø–æ—Ä–∞–∂–∞–µ—Ç –∑—Ä–µ–Ω—å–µ:
        –¢–æ ‚Äî —Ç–µ–Ω—å –∏ —Å—É—â–Ω–æ—Å—Ç—å, –≤–µ—â–µ—Å—Ç–≤–æ –∏ —Å–≤–µ—Ç.

        –ï—Å—Ç—å –¥–≤–∞ –º–æ–ª—á–∞–Ω—å—è, –±–µ—Ä–µ–≥–∞ÃÅ –∏ –º–æ—Ä–µ,
        –î—É—à–∞ –∏ —Ç–µ–ª–æ. –í–ª–∞—Å—Ç–≤—É–µ—Ç –æ–¥–Ω–æ
        –í —Ç–∏—à–∏. –°–ø–æ–∫–æ–π–Ω–æ –Ω–µ–∂–Ω–æ–µ, –æ–Ω–æ
        –í–æ—Å–ø–æ–º–∏–Ω–∞–Ω–∏–π –∏ –ø–æ–∑–Ω–∞–Ω—å—è –≥–æ—Ä–µ

        –¢–∞–∏—Ç –≤ —Å–µ–±–µ, –∏ ¬´–±–æ–ª—å—à–µ –Ω–∏–∫–æ–≥–¥–∞¬ª
        –ó–æ–≤—É—Ç –µ–≥–æ. –¢–µ–ª–µ—Å–Ω–æ–µ –º–æ–ª—á–∞–Ω—å–µ,
        –û–Ω–æ –±–µ—Å—Å–∏–ª—å–Ω–æ, –Ω–µ —Å—Ç—Ä–∞—à–∏—Å—å –≤—Ä–µ–¥–∞!
"""
print(multilineString)
print("---")

let message = """
Put your text in "quotes" to make them look quoted.
"""

/*:
### –ö–∞–∫ –∏–∑–±–µ–∂–∞—Ç—å –Ω–æ–≤—ã—Ö —Å—Ç—Ä–æ–∫ –≤ –º–Ω–æ–≥–æ—Å—Ç—Ä–æ—á–Ω—ã—Ö –ª–∏—Ç–µ—Ä–∞–ª–∞—Ö

[SE-0182][SE-0182] –¥–æ–±–∞–≤–ª—è–µ—Ç –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —É–¥–∞–ª–µ–Ω–∏—è –Ω–∞—á–∞–ª–∞ –Ω–æ–≤—ã—Ö —Å—Ç—Ä–æ–∫ –≤ –º–Ω–æ–≥–æ—Å—Ç—Ä–æ—á–Ω—ã—Ö –ª–∏—Ç–µ—Ä–∞–ª–∞—Ö —Å –ø–æ–º–æ—â—å—é –æ–±—Ä–∞—Ç–Ω–æ–≥–æ —Å–ª—ç—à–∞ –≤ –∫–æ–Ω—Ü–µ —Å—Ç—Ä–æ–∫–∏.

[SE-0182]: https://github.com/apple/swift-evolution/blob/master/proposals/0182-newline-escape-in-strings.md "Swift Evolution Proposal SE-0182: String Newline Escaping"
*/
let escapedNewline = """
–î–ª—è –ø—Ä–æ–ø—É—Å–∫–∞ –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—è —Å—Ç—Ä–æ–∫–∏ \
–¥–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞—Ç–Ω—ã–π —Å–ª—ç—à –≤ –∫–æ–Ω—Ü–µ —ç—Ç–æ–π —Å—Ç—Ä–æ–∫–∏.
"""
print(escapedNewline)
print("---")

/*:
 [–°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ](Table%20of%20contents) ‚Ä¢ [–ü—Ä–µ–¥—ã–¥—É—â–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞](@previous) ‚Ä¢ [–°–ª–µ–¥—É—é—â–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞](@next)
 */
